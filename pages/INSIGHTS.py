import streamlit as st
import pandas as pd 
import seaborn as sys
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
import numpy as np
df=pd.read_csv("data.csv")
df['Gender']=le.fit_transform(df['Gender'])
df['Loan_Status']=le.fit_transform(df['Loan_Status'])
df.dropna(inplace=True)
df=df[df['Gender']!=2]
st.title(":blue[INSIGHTS]")
st.markdown('''_In this section, important points about the data and some key observations viewed by me are discussed , As the prediction of whether a loan Application of a certain person will be approved or not depends on a lot of parameters so it’s very important to understand each parameter_''')
st.subheader(":blue[EFFECT OF CREDIT HISTORY ON LOAN APPROVAL STATUS]",divider='blue')
st.code(df.groupby('Credit_History')['Loan_Status'].value_counts(normalize=True))
st.write(':red[0.0 loan_status is "NOT APPROVED"]')
st.write(':red[1.0 loan_status is "APPROVED"]')
st.markdown('''_As it can be seen from data above that credit score has a very significant effect on whether your loan will be approved or not , so it can be said that one should have good credit score to get loan approved_''')
st.subheader(":blue[EFFECT OF DEPENDENTS ON LOAN APPROVAL STATUS]",divider='blue')
st.code(df.groupby('Dependents')['Loan_Status'].value_counts(normalize=True))
st.write('''_This data depicts the psychology of the banks, they feel secure to give money to a person on whom some people are dependent, as that person is less likely to default on the loan. On the other hand, banks don’t want to give money to someone On which many people are dependent as they are more likely to be under greater financial strain which could lead to default on the loan_''')
st.subheader(":blue[COAPPLICANT INCOME ON LOAN APPROVAL STATUS]",divider='blue')
st.code(df.groupby('Loan_Status')['CoapplicantIncome'].value_counts(normalize=True))
st.write("_Approved loans tend to show a trend of non-zero coapplicant income_")
st.subheader(":blue[EMPLOYMENT ON LOAN APPROVAL STATUS]",divider='blue')
st.code(df.groupby('Self_Employed')['Loan_Status'].value_counts(normalize=True))
st.write("_Self-employed people have a marginally lower chance of getting their loan rejected_")
st.subheader(":blue[EDUCATION ON LOAN APPROVAL STATUS]",divider='blue')
st.code(df.groupby('Education')['Loan_Status'].value_counts(normalize=True))
st.write("_People with a graduation are more likely to get their loans approved by the bank_")
st.subheader(":blue[PERSON'S EDUCATION VS LOAN AMOUNT]",divider='blue')
img ,ax =plt.subplots()
x=df['LoanAmount']
df['Education']=le.fit_transform(df['Education'])
y=df['Education']
colorizer = np.random.rand(480) 
ax = plt.scatter(y,x,c = colorizer,cmap='viridis')
ax = plt.grid(True)
ax = plt.ylabel("LoanAmount")
ax = plt.xlabel("Education")
st.pyplot(img)
st.write(':red[0.0 Education is "Graduate"]')
st.write(':red[1.0 Education is " Not graduate"]')
st.write("_People who are graduate tends to apply for loans with a high amount of principal, whereas non-graduates apply for lower amount of principal while applying for the loan_")
st.subheader(":blue[APPLICANT'S INCOME VS LOAN AMOUNT ]",divider='blue')
img ,ax =plt.subplots()
w=df['ApplicantIncome']
v=df['LoanAmount']
ax = plt.xlabel('ApplicantIncome')
ax = plt.ylabel('LoanAmount')
ax  = plt.scatter(w,v,c = colorizer,cmap='viridis')
st.pyplot(img)
st.write("_The above graph plots one’s income with the amount of loan’s principal_")
st.write("_This graph is plotted to better understand the Debt-to-Income (DTI) ratio of the people of our country_")
st.image('https://media.wallstreetprep.com/uploads/2022/11/28222913/Debt-to-Income-Ratio-Formula.jpg',width=400)
v = v*10
list_of_ratio = ((v/w)*100).to_list()
lis = np.array(list_of_ratio)
st.write("_WHAT IS DTI ?_")
st.write("_DTI (Debt-to-Income Ratio) is a financial metric that compares how much debt you owe each month to how much income you earn._")
st.write("_Lenders use DTI to decide if you can afford new loans._")
st.write("_Lower DTI means better chance of loan approval._")
st.write("_High DTI indicates risk of being overburdened by debt._")
st.write("_Median DTI of This dataset is_")
st.code(np.median(lis))
st.write("_Mean DTI of This dataset is_")
st.code(np.mean(lis))
st.markdown("_What different DTI mean for you are explained below_")
st.image('https://cdn.ramseysolutions.net/daveramsey.com/media/calculators/debt-to-income/dti-ratio-1.png',width=600)
st.markdown("---")
col1, col2, col3, col4, col5 = st.columns([1,2,3,2, 1])
with col3:
    if st.button(":blue[THE END]"):
        st.subheader(" Thanks for Reading :) ")